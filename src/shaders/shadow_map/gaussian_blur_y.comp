#version 450
layout (local_size_x = 32, local_size_y = 32) in;

layout (set = 0, binding = 0) uniform sampler2D in_shadow_map;
layout (set = 0, binding = 1, rg32f) uniform image2D out_shadow_map;

layout (set = 1, binding = 0) uniform uniform_buffer {
	vec4 image_size;
};

// https://github.com/Jam3/glsl-fast-gaussian-blur/blob/master/13.glsl
vec4 blur13(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {
	vec4 color = vec4(0.0);
	vec2 off1 = vec2(1.411764705882353) * direction;
	vec2 off2 = vec2(3.2941176470588234) * direction;
	vec2 off3 = vec2(5.176470588235294) * direction;
	color += texture(image, uv) * 0.1964825501511404;
	color += texture(image, uv + (off1 / resolution)) * 0.2969069646728344;
	color += texture(image, uv - (off1 / resolution)) * 0.2969069646728344;
	color += texture(image, uv + (off2 / resolution)) * 0.09447039785044732;
	color += texture(image, uv - (off2 / resolution)) * 0.09447039785044732;
	color += texture(image, uv + (off3 / resolution)) * 0.010381362401148057;
	color += texture(image, uv - (off3 / resolution)) * 0.010381362401148057;
	return color;
}

void main() {
	imageStore(out_shadow_map, ivec2(gl_GlobalInvocationID.xy),
		blur13(in_shadow_map, gl_GlobalInvocationID.xy/image_size.zw, image_size.zw, vec2(0.0f,1.0f)));
}

